apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
  mavenCentral()
  mavenLocal()
}

dependencies {
  compile project(':concourse-driver-java')
  compile ('org.cinchapi:concourse-config:1.0.5'){
    exclude group: 'org.cinchapi', module:'concourse'
    exclude group: 'org.cinchapi', module:'concourse-driver-java'
  }
  compile 'com.beust:jcommander:1.32'
  compile 'jline:jline:2.11'
}

jar {
  manifest {
      attributes("Specificiation-Title": "Concourse CLI", "Specificiation-Version": version, "Implementation-Version": version)
  }
}

signing {
  required { gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

def getMaven = { ->
  def stdout = new ByteArrayOutputStream()
  exec {
      commandLine 'cat', '../.maven'
      standardOutput = stdout
  }
  return stdout.toString().trim()
}

project.ext.maven = getMaven()

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: project.maven) {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }

      pom.version = '0.5.0-SNAPSHOT'

      pom.project {
         name 'Concourse CLI Framework'
         packaging 'jar'
         description 'A framework for building command line interfaces for Concourse'
         url 'http://concoursedb.com'

         scm {
             url 'git@github.com:cinchapi/concourse.git'
             connection 'git@github.com:cinchapi/concourse.git'
             developerConnection 'git@github.com:cinchapi/concourse.git'
         }

         licenses {
           license {
               name 'The Apache License'
               url 'http://opensource.org/licenses/Apache-2.0'
               distribution 'repo'
           }
       }

       developers {
           developer {
               id 'jnelson'
               name 'Jeff Nelson'
          }
        }
      }
    }
  }
}
